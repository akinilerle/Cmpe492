{"version":3,"sources":["services/analyse.service.js","pages/HomePage/index.js"],"names":["analyseService","check","data","axios","post","configs","analyse","endpoint","InputGroup","Input","Group","TabPane","Tabs","HomePage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","filter","upperTab","formatTab","showAlert","alertMessages","fileList","uploading","handleSubmit","e","preventDefault","form","validateFields","err","values","benefit","userStory","role1","request1","alert","role2","request2","benefit1","concat","benefit2","then","r","messages","length","setState","console","log","catch","error","changeFormatTab","handleUpload","formData","FormData","forEach","file","append","reqwest","url","upload","txt","method","processData","success","href","window","URL","createObjectURL","Blob","response","type","a","linkRef","current","download","name","slice","click","me","React","createRef","_this2","getFieldDecorator","_this$state","onRemove","index","indexOf","newFileList","splice","beforeUpload","toConsumableArray","react_default","createElement","row","className","justify","align","gutter","col","span","card","tabs","defaultActiveKey","value","onChange","style","height","tab","key","tabPosition","es_form","onSubmit","Item","compact","input","width","readOnly","defaultValue","rules","required","message","placeholder","es_button","htmlType","es_alert","description","map","i","icon","onClick","disabled","loading","marginTop","ref","Component","WrappedHomePageForm","Form","create"],"mappings":"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","file":"static/js/1.ee273ce6.chunk.js","sourcesContent":["import axios from 'axios';\nimport configs from '../configs';\n\nconst check = data => {\n  return axios.post(configs.analyse.endpoint, data);\n};\n\nexport const analyseService = {\n  check\n};\n","import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport { analyseService } from '../../services';\nimport reqwest from 'reqwest';\nimport classnames from 'classnames';\nimport {\n  Alert,\n  Button,\n  Card,\n  Col,\n  Form,\n  Input,\n  Icon,\n  Upload,\n  Row,\n  Tabs\n} from 'antd';\n\nimport configs from '../../configs';\n\nimport './index.css';\n\nconst InputGroup = Input.Group;\nconst TabPane = Tabs.TabPane;\n\n\nclass HomePage extends Component {\n  state = {\n    filter: 'pending',\n    upperTab: 'editor',\n    formatTab: 'format1',\n    showAlert: false,\n    alertMessages: [],\n    fileList: [],\n    uploading: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.linkRef = React.createRef();\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        let benefit, userStory;\n\n        if(this.state.formatTab === 'format1' && (!values.role1 || !values.request1)){\n          alert(\"Rol ve İstek alanları zorunludur\");\n          return;\n        }\n        if(this.state.formatTab === 'format2' && (!values.role2 || !values.request2)){\n          alert(\"Rol ve İstek alanları zorunludur\");\n          return;\n        }\n\n        if (this.state.formatTab === 'format1') {\n          benefit = values.benefit1 ? `Böylece ${values.benefit1}.` : '';\n          userStory = `Bir ${values.role1} olarak, ${\n            values.request1\n          } istiyorum. ${benefit}`;\n        } else {\n          benefit = values.benefit2 ? `${values.benefit2} için, ` : '';\n          userStory = `Bir ${values.role2} olarak, ${benefit}${\n            values.request2\n          } istiyorum.`;\n        }\n\n        analyseService\n          .check({ userStory })\n          .then(r => {\n            if (r.data && r.data.messages.length > 0) {\n              this.setState({\n                showAlert: true,\n                alertMessages: r.data.messages\n              });\n            } else {\n              this.setState({\n                showAlert: false,\n                alertMessages: []\n              });\n            }\n            console.log(r.data);\n          })\n          .catch(e => {\n            console.error(e);\n            this.setState({ showAlert: true });\n          });\n\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  changeFormatTab = formatTab => {\n    this.setState({ formatTab });\n  };\n\n  handleUpload = () => {\n    const { fileList } = this.state;\n    const formData = new FormData();\n    fileList.forEach(file => {\n      formData.append('file', file);\n    });\n\n    this.setState({\n      uploading: true\n    });\n\n    reqwest({\n      url: configs.upload.txt.endpoint,\n      method: 'post',\n      processData: false,\n      data: formData,\n      success: r => {\n        this.setState({\n          fileList: [],\n          uploading: false\n        });\n        const href = window.URL.createObjectURL(\n          new Blob([r.response], { type: 'text/plain'})\n        );\n        const a = this.linkRef.current;\n        a.download = 'kullanici-hikayeleri.' + fileList[0].name.slice(-3);\n        a.href = href;\n        a.click();\n        a.href = '';\n      },\n      error: (e) => {\n        this.setState({\n          uploading: false\n        });\n\n        console.log('error: ');\n        console.log(e.me);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const {\n      uploading,\n      fileList,\n      upperTab,\n      formatTab,\n      showAlert,\n      alertMessages\n    } = this.state;\n\n    const props = {\n      onRemove: file => {\n        this.setState(state => {\n          const index = state.fileList.indexOf(file);\n          const newFileList = state.fileList.slice();\n          newFileList.splice(index, 1);\n          return {\n            fileList: newFileList\n          };\n        });\n      },\n      beforeUpload: file => {\n        this.setState(state => ({\n          fileList: [...state.fileList, file]\n        }));\n        return false;\n      },\n      fileList\n    };\n\n    return (\n      <Row\n        className=\"home-page\"\n        type=\"flex\"\n        justify=\"space-around\"\n        align=\"top\"\n        gutter={8}\n      >\n        <Col span={12}>\n          <Card>\n            <div>\n              <Tabs\n                defaultActiveKey=\"editor\"\n                value={upperTab}\n                onChange={this.changeFormatTab}\n                style={{ height: 700 }}\n              >\n                <TabPane tab=\"Editor\" key=\"editor\">\n                  <Tabs\n                    defaultActiveKey=\"format1\"\n                    value={formatTab}\n                    tabPosition={'left'}\n                    onChange={this.changeFormatTab}\n                    style={{ height: 500 }}\n                  >\n                    <TabPane tab=\"Format 1\" key=\"format1\">\n                      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                        <Form.Item>\n                          <InputGroup compact>\n                            <Input\n                              style={{ width: 50 }}\n                              readOnly\n                              defaultValue=\"Bir\"\n                            />\n                            {getFieldDecorator('role1', {\n                              rules: [\n                                {\n                                  required: false,\n                                  message: 'Zorunlu alan'\n                                }\n                              ]\n                            })(<Input style={{ width: 100 }} />)}\n\n                            <Input\n                              style={{ width: 100 }}\n                              readOnly\n                              defaultValue=\"olarak,\"\n                            />\n                          </InputGroup>\n                        </Form.Item>\n                        <Form.Item>\n                          <InputGroup compact>\n                            {getFieldDecorator('request1', {\n                              rules: [\n                                {\n                                  required: false,\n                                  message: 'Zorunlu alan'\n                                }\n                              ]\n                            })(<Input \n                              style={{ width: 200 }} \n                              />)}\n                            <Input\n                              style={{ width: 100 }}\n                              readOnly\n                              defaultValue=\"istiyorum.\"\n                            />\n                          </InputGroup>\n                        </Form.Item>\n                        <Form.Item>\n                          <InputGroup compact>\n                            <Input\n                              style={{ width: '20%' }}\n                              readOnly\n                              defaultValue=\"Boylece\"\n                            />\n                            {getFieldDecorator('benefit1', {\n                              rules: [\n                                {\n                                  required: false\n                                }\n                              ]\n                            })(<Input style={{ width: 250 }} />)}\n                            <Input\n                              style={{ width: '30%' }}\n                              readOnly\n                              placeholder=\".]\"\n                            />\n                          </InputGroup>\n                          <Input\n                            type=\"hidden\"\n                            name=\"formatType\"\n                            defaultValue=\"format1\"\n                          />\n                        </Form.Item>\n                        <Form.Item>\n                          <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            className=\"login-form-button\"\n                          >\n                            Gonder\n                          </Button>\n                          &nbsp;\n                          <Button type=\"danger\" className=\"login-form-button\">\n                            Kaydet\n                          </Button>\n                        </Form.Item>\n\n                        {showAlert && (\n                          <Alert\n                            message=\"Hata!..\"\n                            description={\n                              <ul>\n                                {alertMessages.map(message => (\n                                  <li>{message}</li>\n                                ))}\n                              </ul>\n                            }\n                            type=\"error\"\n                          />\n                        )}\n                      </Form>\n                    </TabPane>\n                    <TabPane tab=\"Format 2\" key=\"format2\">\n                      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                        <Form.Item>\n                          <InputGroup compact>\n                            <Input\n                              style={{ width: 50 }}\n                              readOnly\n                              defaultValue=\"Bir\"\n                            />\n                            {getFieldDecorator('role2', {\n                              rules: [\n                                {\n                                  required: false,\n                                  message: 'Zorunlu alan'\n                                }\n                              ]\n                            })(<Input style={{ width: 100 }} />)}\n\n                            <Input\n                              style={{ width: 100 }}\n                              readOnly\n                              defaultValue=\"olarak,\"\n                            />\n                          </InputGroup>\n                        </Form.Item>\n                        <Form.Item>\n                          <InputGroup compact>\n                            {getFieldDecorator('benefit2', {\n                              rules: [\n                                {\n                                  required: false\n                                }\n                              ]\n                            })(<Input style={{ width: 200 }} />)}\n                            <Input\n                              style={{ width: 50 }}\n                              readOnly\n                              defaultValue=\"icin,\"\n                            />\n                          </InputGroup>\n                        </Form.Item>\n                        <Form.Item>\n                          <InputGroup compact>\n                            {getFieldDecorator('request2', {\n                              rules: [\n                                {\n                                  required: false,\n                                  message: 'Zorunlu alan'\n                                }\n                              ]\n                            })(<Input style={{ width: 200 }} />)}\n                            <Input\n                              style={{ width: 100 }}\n                              readOnly\n                              defaultValue=\"istiyorum.\"\n                            />\n                          </InputGroup>\n                        </Form.Item>\n                        <Form.Item>\n                          <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            className=\"login-form-button\"\n                          >\n                            Gonder\n                          </Button>\n                          &nbsp;\n                          <Button type=\"danger\" className=\"login-form-button\">\n                            Kaydet\n                          </Button>\n                        </Form.Item>\n\n                        {showAlert && (\n                          <Alert\n                            message=\"Hata!..\"\n                            description={\n                              <ul>\n                                {alertMessages.map((message, i) => (\n                                  <li key={'hata2-' + i}>{message}</li>\n                                ))}\n                              </ul>\n                            }\n                            type=\"error\"\n                          />\n                        )}\n                      </Form>\n                    </TabPane>\n                  </Tabs>\n                </TabPane>\n                <TabPane tab=\"Dosya\" key=\"file\">\n                  <div>\n                    <Upload {...props}>\n                      <Button>\n                        <Icon type=\"upload\" /> Select File\n                      </Button>\n                    </Upload>\n                    <Button\n                      type=\"primary\"\n                      onClick={this.handleUpload}\n                      disabled={fileList.length === 0}\n                      loading={uploading}\n                      style={{ marginTop: 16 }}\n                    >\n                      {uploading ? 'Uploading' : 'Start Upload'}\n                    </Button>\n                    <a ref={this.linkRef} />\n                  </div>\n                </TabPane>\n              </Tabs>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst WrappedHomePageForm = Form.create({ name: 'homepage' })(HomePage);\n\nexport default WrappedHomePageForm;\n"],"sourceRoot":""}